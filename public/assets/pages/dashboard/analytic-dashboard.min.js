

$(document).ready(function() {
    $('#mobile-collapse').trigger('click');
    $("#polybag").load('../polybag'); 

    Highcharts.setOptions({
        global: {
            timezoneOffset: -420, // Jakarta timezone offset, UTC+7
        }
    });

    last_data_weather();
    polybag('1')
    
    setInterval(function(){
         last_data_weather();
         var id_polybag = document.getElementById("id_polybag").value;
         //alert(id_polybag)
         polybag(id_polybag) 
         

    }, 60000);

});


function polybag(id_polybag){
    $("#soil_sensor").load('../soil_sensor') 
    $("#id_polybag").val(id_polybag);   
    if(id_polybag =='1'){var code_polybag = "b4t1u1 (4in1= 1 / NPK= 5)";}else
    if(id_polybag =='2'){var code_polybag = "b8t1u1 (NPK= 2)";}else
    if(id_polybag =='3'){var code_polybag = "b8t1u2 (4in1= 6 / NPK= 7)";}else
    if(id_polybag =='4'){var code_polybag = "b0t1u3 (4in1= 8 / NPK= 11)";}else
    if(id_polybag =='5'){var code_polybag = "b8t2u1 (4in1= 4 / NPK= 12)";}else
    if(id_polybag =='6'){var code_polybag = "b0t2u2 (NPK= 3)";}else
    if(id_polybag =='7'){var code_polybag = "b4t2u3 (4in1= 14 / NPK= 13)";}else
    if(id_polybag =='8'){var code_polybag = "b0k u1 (4in1= 16 / NPK= 15)";}else
    if(id_polybag =='9'){var code_polybag = "b4k u2  (NPK= 17)";}else
    if(id_polybag =='10'){var code_polybag = "b8ku3 (NPK= 9)";}

    var name_polybag = "SOIL SENSOR - POLYBAG "+id_polybag+" - "+code_polybag;

   
    last_data_npk(id_polybag);
    last_data_humidity(id_polybag); 

    $(".no_polybag").text(name_polybag);


}

function last_data_weather(){
    $("#weather_sensor").load('../view_weather_sensor')

  $.ajax({
      type: "GET",
      url: "../data_weather/",
      dataType: "json",
      success: function (data) {

          var id_sensor = data.ID;
          var TDS = data[0].TDS;
          var TA = data[0].TA;     
          var RH = data[0].RH;  
          var DP = data[0].DP;  
          var PR = data[0].PR;  
          var TDev = data[0].TDev;     
          var rlySts = data[0].rlySts; 
          var datetime = data[0].datetime;

          $("#last-ta").text(TA); $("#lastdate_ta").text(datetime);
          $("#last-rh").text(RH); $("#lastdate_rh").text(datetime);
          $("#last-dp").text(DP); $("#lastdate_dp").text(datetime);
          $("#last-pr").text(PR); $("#lastdate_pr").text(datetime);

          //add_sensor_weather(TDS,TA,RH,DP,PR,TDev,rlySts,datetime,id_sensor);

      }
  });
}

function last_data_npk(id_polybag){
    
         $.ajax({type: "GET",url: "../last_data_npk/"+id_polybag,dataType: "json",success: function (data) {
          var N = data[0].N;var P = data[0].P;var K = data[0].K;var datetime = data[0].datetime;
           $("#last-nitrogen-1").text(N);$("#lastdate_nitrogen-1").text(datetime);
           $("#last-phosphorous-1").text(P);$("#lastdate_phosphorous-1").text(datetime);
           $("#last-potassium-1").text(K);$("#lastdate_potassium-1").text(datetime);
           load_data_npk(id_polybag);
      }
  });
}

function last_data_humidity(id_polybag){
  //$("#soil_sensor").load('http://localhost:3000/soil_sensor')
  $.ajax({
      type: "GET",
      url: "../last_data_humidity/"+id_polybag,
      dataType: "json",
      success: function (data) {
        if(data == ''){
            console.log('data empty');
            return false;
        }else{
          var TS = data[0].TS;
          var HU = data[0].HU;
          var EC = data[0].EC;
          var PH = data[0].PH;
          var datetime = data[0].datetime;
          var id_sensor = data[0].ID;

          $("#last-temperature-1").text(TS);$("#lastdate_temperature-1").text(datetime);
          $("#last-humidity-1").text(HU);$("#lastdate_humidity-1").text(datetime);
          $("#last-conductivityy-1").text(EC);$("#lastdate_conductivityy-1").text(datetime);
          $("#last-ph-1").text(PH);$("#lastdate_ph-1").text(datetime);

          //add_sensor_soil(N,P,K,TS,HU,EC,PH,datetime);

          //add_sensor_weather(TDS,TA,RH,DP,PR,TDev,rlySts,datetime,id_sensor);

          load_data_humidity(id_polybag);
          //load_data_weather();
        }

      }
  });
}



function load_data_npk(id_polybag){ 
    $.ajax({
      type: "GET",
      url: "../data_npk/"+id_polybag,
      dataType: "json",
      success: function (data) {
            var arr_data_N = data.map(item => item.N) 
            var arr_data_P = data.map(item => item.P) 
            var arr_data_K = data.map(item => item.K)

            var arr_data_time = data.map(item => item.datetime)

            var arr_data_string_N = JSON.stringify(arr_data_N);
            var arr_data_string_P = JSON.stringify(arr_data_P);
            var arr_data_string_K = JSON.stringify(arr_data_K);

            var arr_data_string_time = JSON.stringify(arr_data_time);

            var obj_data_N = JSON.parse(arr_data_string_N);
            var obj_data_P = JSON.parse(arr_data_string_P);
            var obj_data_K = JSON.parse(arr_data_string_K);

            var obj_data_time = JSON.parse(arr_data_string_time);


            var dt_N = []
            var dt_P = []
            var dt_K = []

            var i = 0
            var outData = []

                
            for (i = 0; i < obj_data_time.length; i++) {
                dt_N[i] = {
                    x: Date.parse(obj_data_time[i]),
                    y: +obj_data_N[i]
                }
                dt_P[i] = {
                    x: Date.parse(obj_data_time[i]),
                    y: +obj_data_P[i]
                }
                dt_K[i] = {
                    x: Date.parse(obj_data_time[i]),
                    y: +obj_data_K[i]
                }

                //dt_N[i] = +obj_data_N[i];
                //dt_P[i] = +obj_data_P[i];
                //dt_K[i] = +obj_data_K[i];
                //dt_TS[i] = +obj_data_TS[i];
                //dt_HU[i] = +obj_data_HU[i];
                //dt_EC[i] = +obj_data_EC[i];
                //dt_PH[i] = +obj_data_PH[i];
            }
            //alert(obj_data_time)
            //console.log(dt_N);
            plot_npk(dt_N,dt_P,dt_K,arr_data_time)
            //plot_temperature(dt_TS)
            //plot_humidity(dt_HU)
            //plot_conductivity(dt_EC)
            //plot_PH(dt_PH)
        }
    });
}


function load_data_humidity(id_polybag){ 
    $.ajax({
      type: "GET",
      url: "../data_humidity/"+id_polybag,
      dataType: "json",
      success: function (data) {

            var arr_data_TS = data.map(item => item.TS)
            var arr_data_HU = data.map(item => item.HU)
            var arr_data_EC = data.map(item => item.EC)
            var arr_data_PH = data.map(item => item.PH)
            var arr_data_time = data.map(item => item.datetime)

            var arr_data_string_TS = JSON.stringify(arr_data_TS);
            var arr_data_string_HU = JSON.stringify(arr_data_HU);
            var arr_data_string_EC = JSON.stringify(arr_data_EC);
            var arr_data_string_PH = JSON.stringify(arr_data_PH);
            var arr_data_string_time = JSON.stringify(arr_data_time);

            var obj_data_TS = JSON.parse(arr_data_string_TS);
            var obj_data_HU = JSON.parse(arr_data_string_HU);
            var obj_data_EC = JSON.parse(arr_data_string_EC);
            var obj_data_PH = JSON.parse(arr_data_string_PH);
            var obj_data_time = JSON.parse(arr_data_string_time);


            var dt_TS = []
            var dt_HU = []
            var dt_EC = []
            var dt_PH = []
            var i = 0
            var outData = []

                
            for (i = 0; i < obj_data_time.length; i++) {
                dt_TS[i] = {
                    x: Date.parse(obj_data_time[i]),
                    y: +obj_data_TS[i]
                }
                dt_HU[i] = {
                    x: Date.parse(obj_data_time[i]),
                    y: +obj_data_HU[i]
                }
                 dt_EC[i] = {
                    x: Date.parse(obj_data_time[i]),
                    y: +obj_data_EC[i]
                }
                 dt_PH[i] = {
                    x: Date.parse(obj_data_time[i]),
                    y: +obj_data_PH[i]
                }
                //dt_N[i] = +obj_data_N[i];
                //dt_P[i] = +obj_data_P[i];
                //dt_K[i] = +obj_data_K[i];
                //dt_TS[i] = +obj_data_TS[i];
                //dt_HU[i] = +obj_data_HU[i];
                //dt_EC[i] = +obj_data_EC[i];
                //dt_PH[i] = +obj_data_PH[i];
            }
            //alert(obj_data_time)
            //console.log(dt_N);
            //plot_npk(dt_N,dt_P,dt_K,arr_data_time)
            plot_temperature(dt_TS)
            plot_humidity(dt_HU)
            plot_conductivity(dt_EC)
            plot_PH(dt_PH)
        }
    });
}

function plot_npk(val_N,val_P,val_K,val_cat) {
   
   Highcharts.chart('plot_npk-1', {
    chart: {
        type: 'spline',
        zoomType: 'x'
    },
    credits: {
        enabled: false
    },
    title: {
        text: 'NPK Sensor'
    },
    subtitle: {
        text: ''
    },
    xAxis: {
        type: 'datetime',
        
    },
    yAxis: {
        title: {
            text: 'mg/kg'
        }
    },
    plotOptions:{
            series:{
                turboThreshold:0//set it to a larger threshold, it is by default to 1000
            }
        },
    series: [{
        name: 'N',
        data: val_N
    },{
        name: 'P',
        data: val_P

    },{
        name: 'K',
        data: val_K
        
    }]
});

}


function plot_temperature(dt_TS) {
    Highcharts.chart('plot_temperature-1', {

    chart: {
        type: 'spline',
        scrollablePlotArea: {
            //minWidth: 700
        }
    },
    credits: {
        enabled: false
    },
    title: {
        text: ''
    },

    xAxis: {
        type: 'datetime',
        //tickInterval: 7 * 24 * 3600 * 1000, // one week
        tickWidth: 0,
        gridLineWidth: 0
    },

   yAxis: {
        title: {
            text: '℃'
        }
    },
    plotOptions:{
            series:{
                turboThreshold:0//set it to a larger threshold, it is by default to 1000
            }
        },
     series: [{
        name: 'Temperature',
        data: dt_TS,
        color: '#FF0000'
    }]
});

}


function plot_humidity(dt_HU) {
    Highcharts.chart('plot_humidity-1', {

    chart: {
        type: 'spline',
        //scrollablePlotArea: {
            //minWidth: 700
        //}
    },
    credits: {
        enabled: false
    },

    title: {
        text: ''
    },

    xAxis: {
        type: 'datetime',
        //tickInterval: 7 * 24 * 3600 * 1000, // one week
        tickWidth: 0,
        gridLineWidth: 0
    },

    yAxis: [{ // left y axis
        title: {
            text: '%'
        },
        showFirstLabel: false
    }],
    tooltip: {
        shared: true,
        crosshairs: true
    },
    plotOptions:{
            series:{
                turboThreshold:0//set it to a larger threshold, it is by default to 1000
            }
        },
     series: [{
        name: 'Humidity',
        data: dt_HU,
        color: '#FF0000'
    }]
});

}


function plot_conductivity(dt_EC) {
    Highcharts.chart('plot_conductivity-1', {

    chart: {
        type: 'spline',
        //scrollablePlotArea: {
            //minWidth: 700
        //}
    },
    credits: {
        enabled: false
    },
    title: {
        text: ''
    },

    xAxis: {
        type: 'datetime',
        //tickInterval: 7 * 24 * 3600 * 1000, // one week
        tickWidth: 0,
        gridLineWidth: 0
    },

    yAxis: [{ // left y axis
        title: {
            text: 'EC'
        },
        showFirstLabel: false
    }],
    plotOptions:{
            series:{
                turboThreshold:0//set it to a larger threshold, it is by default to 1000
            }
        },
     series: [{
        name: 'Conductivity',
        data: dt_EC,
        color: '#FF0000'
    }]
});

}




function plot_PH(dt_PH) {
    Highcharts.chart('plot_ph-1', {

    chart: {
        type: 'spline',

    },
    credits: {
        enabled: false
    },

    title: {
        text: ''
    },

    xAxis: {
        type: 'datetime',
    },

    yAxis: [{ // left y axis
        title: {
            text: 'pH'
        },
        showFirstLabel: false
    }],

    plotOptions:{
            series:{
                turboThreshold:0//set it to a larger threshold, it is by default to 1000
            }
        },
     series: [{
        name: 'PH',
        data: dt_PH,
        color: '#FF0000'
    }]
});

}



function plot_nitrogen(day) {

   Highcharts.chart('plot_nitrogen', {

    chart: {
        type: 'gauge',
        plotBackgroundColor: null,
        plotBackgroundImage: null,
        plotBorderWidth: 0,
        plotShadow: false,
        height: '80%'
    },

    title: {
        text: 'Nitrogen'
    },

    pane: {
        startAngle: -90,
        endAngle: 89.9,
        background: null,
        center: ['50%', '75%'],
        size: '110%'
    },

    // the value axis
    yAxis: {
        min: 0,
        max: 200,
        tickPixelInterval: 72,
        tickPosition: 'inside',
        tickColor: Highcharts.defaultOptions.chart.backgroundColor || '#FFFFFF',
        tickLength: 20,
        tickWidth: 2,
        minorTickInterval: null,
        labels: {
            distance: 20,
            style: {
                fontSize: '14px'
            }
        },
        lineWidth: 0,
        plotBands: [{
            from: 0,
            to: 120,
            color: '#55BF3B', // green
            thickness: 20
        }, {
            from: 120,
            to: 160,
            color: '#DDDF0D', // yellow
            thickness: 20
        }, {
            from: 160,
            to: 200,
            color: '#DF5353', // red
            thickness: 20
        }]
    },

    series: [{
        name: 'Speed',
        data: [80],
        tooltip: {
            valueSuffix: ' mg/kg'
        },
        dataLabels: {
            format: '{y} mg/kg',
            borderWidth: 0,
            color: (
                Highcharts.defaultOptions.title &&
                Highcharts.defaultOptions.title.style &&
                Highcharts.defaultOptions.title.style.color
            ) || '#333333',
            style: {
                fontSize: '16px'
            }
        },
        dial: {
            radius: '80%',
            backgroundColor: 'gray',
            baseWidth: 12,
            baseLength: '0%',
            rearLength: '0%'
        },
        pivot: {
            backgroundColor: 'gray',
            radius: 6
        }

    }]

});

}


function plot_phosphor(day) {
    Highcharts.chart('plot_phosphor', {
        chart: {
        type: 'gauge',
        plotBackgroundColor: null,
        plotBackgroundImage: null,
        plotBorderWidth: 0,
        plotShadow: false,
        height: '80%'
    },

    title: {
        text: 'Phosphorous'
    },

    pane: {
        startAngle: -90,
        endAngle: 89.9,
        background: null,
        center: ['50%', '75%'],
        size: '110%'
    },

    // the value axis
    yAxis: {
        min: 0,
        max: 200,
        tickPixelInterval: 72,
        tickPosition: 'inside',
        tickColor: Highcharts.defaultOptions.chart.backgroundColor || '#FFFFFF',
        tickLength: 20,
        tickWidth: 2,
        minorTickInterval: null,
        labels: {
            distance: 20,
            style: {
                fontSize: '14px'
            }
        },
        lineWidth: 0,
        plotBands: [{
            from: 0,
            to: 120,
            color: '#55BF3B', // green
            thickness: 20
        }, {
            from: 120,
            to: 160,
            color: '#DDDF0D', // yellow
            thickness: 20
        }, {
            from: 160,
            to: 200,
            color: '#DF5353', // red
            thickness: 20
        }]
    },

    series: [{
        name: 'Speed',
        data: [80],
        tooltip: {
            valueSuffix: ' mg/kg'
        },
        dataLabels: {
            format: '{y} mg/kg',
            borderWidth: 0,
            color: (
                Highcharts.defaultOptions.title &&
                Highcharts.defaultOptions.title.style &&
                Highcharts.defaultOptions.title.style.color
            ) || '#333333',
            style: {
                fontSize: '16px'
            }
        },
        dial: {
            radius: '80%',
            backgroundColor: 'gray',
            baseWidth: 12,
            baseLength: '0%',
            rearLength: '0%'
        },
        pivot: {
            backgroundColor: 'gray',
            radius: 6
        }

    }]

});

}






function plot_ph_tank(day) {
    Highcharts.chart('plot_ph_tank', {

    chart: {
        type: 'spline',
        //scrollablePlotArea: {
            //minWidth: 700
        //}
    },

    title: {
        text: 'PH'
    },

    xAxis: {
        //tickInterval: 7 * 24 * 3600 * 1000, // one week
        tickWidth: 0,
        gridLineWidth: 0
    },

    yAxis: [{ // left y axis
        title: {
            text: 'pH'
        },
        labels: {
            align: 'left',
            x: 3,
            y: 16,
            format: '{value:.,0f}'
        },
        showFirstLabel: false
    }],

  

    tooltip: {
        shared: true,
        crosshairs: true
    },

 

     series: [{
        name: 'Sensor 1',
        data: [43934, 48656, 65165, 81827, 112143, 142383,
                171533, 165174, 155157, 161454, 154610],
        color: '#0df3a3'
    }]
});

}

function plot_tds(day) {
    Highcharts.chart('plot_tds', {

    chart: {
        type: 'spline',
        //scrollablePlotArea: {
            //minWidth: 700
        //}
    },

    title: {
        text: 'TDS'
    },

    xAxis: {
        //tickInterval: 7 * 24 * 3600 * 1000, // one week
        tickWidth: 0,
        gridLineWidth: 0
    },

    yAxis: [{ // left y axis
        title: {
            text: 'ppm'
        },
        labels: {
            align: 'left',
            x: 3,
            y: 16,
            format: '{value:.,0f}'
        },
        showFirstLabel: false
    }],

  

    tooltip: {
        shared: true,
        crosshairs: true
    },

 

     series: [{
        name: 'Senosr 1',
        data: [43934, 48656, 65165, 81827, 112143, 142383,
                171533, 165174, 155157, 161454, 154610],
        color: '#0df3a3'
    }]
});

}


function plot_volume(day) {
    Highcharts.chart('plot_volume', {

    chart: {
        type: 'spline',
        //scrollablePlotArea: {
            //minWidth: 700
        //}
    },

    title: {
        text: 'Volume'
    },

    xAxis: {
        //tickInterval: 7 * 24 * 3600 * 1000, // one week
        tickWidth: 0,
        gridLineWidth: 0
    },

    yAxis: [{ // left y axis
        title: {
            text: 'liter'
        },
        labels: {
            align: 'left',
            x: 3,
            y: 16,
            format: '{value:.,0f}'
        },
        showFirstLabel: false
    }],

  

    tooltip: {
        shared: true,
        crosshairs: true
    },

 

     series: [{
        name: 'Time',
        data: [43934, 48656, 65165, 81827, 112143, 142383,
                171533, 165174, 155157, 161454, 154610],
        color: '#0df3a3'
    }]
});

}
